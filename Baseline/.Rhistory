model <- lm(y300 ~ shift)
summary(aov(model))
model <- lm(y300 ~ shift + daycount)
summary(aov(model))
data$shift.day <- data$shift + (data$daycount-1)*3
library(ggplot2)
data <- read.table("Baseline.csv", sep="\t", header=TRUE)
data$day <- data$daycount
data$hour <- data$partnum %/% 60
data$shift.day <- data$shift + (data$daycount-1)*3
view(data)
View(data)
data <- read.delim("~/Documents/GitHub/STAT-435/Baseline/Baseline.csv")
attach(data)
data$shift.day <- data$shift + (data$daycount-1)*3
model <- lm(y300 ~ as.factor(shift.day) + daycount + shift)
data$shift.day <- data$shift + (data$daycount-1)*3
model <- lm(y300 ~ as.factor(shift.day) + daycount + shift)
attach(data)
data <- read.delim("~/Documents/GitHub/STAT-435/Baseline/Baseline.csv")
data$shift.day <- data$shift + (data$daycount-1)*3
attach(data)
data <- read.delim("~/Documents/GitHub/STAT-435/Baseline/Baseline.csv")
data$shift.day <- data$shift + (data$daycount-1)*3
attach(data)
Show(data)
View(data)
model <- lm(y300 ~ as.factor(shift.day) + daycount + shift)
summary(aov(model))
model <- lm(y300 ~ as.factor(shift.day) + as.factor(daycount) + shift)
summary(aov(model))
(data)
model <- lm(y300 ~ as.factor(shift.day + daycount + shift, data=data)
model <- lm(y300 ~ as.factor(shift.day) + daycount + shift, data=data)
model <- lm(y300 ~ as.factor(shift.day) + daycount + shift, data)
summary(aov(model))
data <- read.delim("~/Documents/GitHub/STAT-435/Baseline/Baseline.csv")
data$shift.day <- data$shift + (data$daycount-1)*3
model <- lm(y300 ~ as.factor(shift.day) + daycount + shift, data)
summary(aov(model))
model <- lm(y300 ~ as.factor(shift.day) + as.factor(daycount) + as.factor(shift), data)
summary(aov(model))
View(model)
View(data)
elimination <- read.delim("~/Documents/GitHub/STAT-435/search_for_dominant_cause/elimination.csv")
View(elimination)
data <- read.delim("~/Documents/GitHub/STAT-435/search_for_dominant_cause/elimination.csv")
data <- read.delim("~/Documents/GitHub/STAT-435/search_for_dominant_cause/elimination.csv")
plot(y200~y300, data)
plot(y100~y200, data)
plot(y100~y300, data)
plot(y200~y300, data)
ggplot(data=data) + geom_point(aes(x=y200, y=y300))
ggplot(data=data) + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.3, size=1)
plots.base <- ggplot(data=data) +
theme(plot.title=element_text(hjust=0.5, face="bold"),
axis.title=element_text(size=12)) +
geom_hline(yintercept=y300.min, color="#747474") +
geom_hline(yintercept=y300.max, color="#747474")
plots.base <- ggplot(data=data) +
theme(plot.title=element_text(hjust=0.5, face="bold"),
axis.title=element_text(size=12))
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.3, size=1)
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.3, size=1)
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1)
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200")
# Boxplot by day
plots.base + geom_boxplot(aes(y=y300, x=as.factor(day))) +
xlab("Day") + ylab("y300") +
ggtitle("Distribution of output variable y300 by day")
library(ggplot2)
data <- read.table("Baseline.csv", sep="\t", header=TRUE)
data$day <- data$daycount
data$hour <- data$partnum %/% 60
data$shift.day <- data$shift + (data$daycount-1)*3
View(data)
head(data)
y300.mean <- mean(data$y300); y300.mean
y300.sd <- sd(data$y300); y300.sd
ci.halfwidth <- qnorm(0.975) * y300.sd / sqrt(length(data$y300))
y300.mean - ci.halfwidth; y300.mean + ci.halfwidth
y300.min <- min(data$y300); y300.min
y300.max <- max(data$y300); y300.max
num.outof.spec <- sum((data$y300 > 10) | (data$y300 < -10)); num.outof.spec
num.outof.spec/ length(data$y300)
# Histogram showing distribution of the data
ggplot(data=data, mapping=aes(x=y300)) +
geom_histogram(color="#CCCCCC", fill="#686868") +
geom_vline(xintercept=-10, color="#747474", linetype="dashed") +
geom_vline(xintercept=10, color="#747474", linetype="dashed") +
theme(plot.title=element_text(hjust=0.5, face="bold"),
axis.title=element_text(size=12)) +
ggtitle("Distribution of observed values\nwith target specification limits") +
xlab("Observed y300") +
ylab("Frequency")
# A base theme so all plots look consistent
plots.base <- ggplot(data=data) +
theme(plot.title=element_text(hjust=0.5, face="bold"),
axis.title=element_text(size=12)) +
geom_hline(yintercept=y300.min, color="#747474") +
geom_hline(yintercept=y300.max, color="#747474")
# Prep for the multivari plot
hours.df <- data.frame(hour=unique(data$hour))
hours.df$y300.avg <- sapply(hours.df$hour,
function(x){
return(mean(subset(data, hour==x)$y300))
})
# Multivari plot by hour
plots.base + geom_point(aes(y=y300, x=partnum), color="blue", alpha=0.3, size=1, show.legend=TRUE) +
geom_line(data=hours.df,
mapping=aes(y=y300.avg, x=as.integer(hour)*60),
colour="#EE4422", size=1, alpha=0.7, show.legend=FALSE) +
geom_point(data=hours.df,
mapping=aes(y=y300.avg, x=as.integer(hour)*60),
colour="red", size=2, alpha=0.7, show.legend=TRUE) +
xlab("Part number") +
ggtitle("Time series of output variable y300\nover 5 days of observation") +
geom_hline(yintercept=-10, color="#747474", linetype="dashed") +
geom_hline(yintercept=10, color="#747474", linetype="dashed")
# Boxplot by day
plots.base + geom_boxplot(aes(y=y300, x=as.factor(day))) +
xlab("Day") + ylab("y300") +
ggtitle("Distribution of output variable y300 by day")
# Boxplot by shift
plots.base + geom_boxplot(aes(y=y300, x=as.factor(shift))) +
xlab("Shift") + ylab("y300") +
ggtitle("Distribution of output variable y300 by shift")
# Boxplot by hour
plots.base + geom_boxplot(aes(y=y300, x=as.factor(hour))) +
xlab("Hour") + ylab("y300") +
ggtitle("Distribution of output variable y300 by hour")
# Boxplot by shift by day
plots.base + geom_boxplot(aes(y=y300, x=as.factor(shift.day))) +
xlab("Shift") + ylab("y300") +
ggtitle("Distribution of output variable y300 by shift (by day)")
# There was a lot of hourly variability from the multivari chart.
# We can check this with a linear model.
# We get an R-squared of 65%: 2/3 of variability can be explained by hour-to-hour
# (or on the scale of 4 hours) variation
hour.model <- lm(y300 ~ as.factor(hour), data)
summary(hour.model)
1 - summary(hour.model)$r.squared
plots.base + geom_point(aes(y=hour.model$residuals, x=partnum), color="blue", alpha=0.3, size=1) +
xlab("Part number") +
ylab("Hour-adjusted y300") +
ggtitle("Residuals of linear model of output y300 on hour\nover 5 days of observation") +
geom_hline(yintercept=-10, color="#747474", linetype="dashed") +
geom_hline(yintercept=10, color="#747474", linetype="dashed")
shift.model <- lm(y300 ~ as.factor(shift), data)
summary(shift.model)
day.model <- lm(y300 ~ as.factor(day), data)
summary(day.model)
shift.day.model <- lm(y300 ~ as.factor(shift.day), data)
summary(shift.day.model)
data$shift.day
summary(shift.day.model)$r.squared - summary(day.model)$r.squared
summary(hour.model)$r.squared - summary(shift.day.model)$r.squared
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200")
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200")
data <- read.delim("~/Documents/GitHub/STAT-435/Baseline/Baseline.csv")
data$shift.day <- data$shift + (data$daycount-1)*3
model <- lm(y300 ~ as.factor(shift.day) + as.factor(daycount) + as.factor(shift), data)
summary(aov(model))
data <- read.delim("~/Documents/GitHub/STAT-435/search_for_dominant_cause/elimination.csv")
plot(y200~y300, data)
plot(y100~y200, data)
plot(y100~y300, data)
plots.base <- ggplot(data=data) +
theme(plot.title=element_text(hjust=0.5, face="bold"),
axis.title=element_text(size=12))
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200")
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200") + geom_smooth(method='lm')
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200") + geom_smooth(method='lm', formula= y~x)
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200") + geom_smooth(method='lm', se = FALSE)
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200") + geom_smooth(method='lm', aes(x=y200, y=y300))
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200") + geom_smooth(method='lm', aes(x=y200, y=y300), se=FALSE)
# equation to get equation of linear regression line
lm_eqn <- function(df){
m <- lm(y ~ x, df);
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(unname(coef(m)[1]), digits = 2),
b = format(unname(coef(m)[2]), digits = 2),
r2 = format(summary(m)$r.squared, digits = 3)))
as.character(as.expression(eq));
}
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200") + geom_smooth(method='lm', aes(x=y200, y=y300), se=FALSE, label=lm_eqn(df))
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200") + geom_smooth(method='lm', aes(x=y200, y=y300), se=FALSE, label=lm_eqn(data))
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200") +
geom_smooth(method='lm', aes(x=y200, y=y300), se=FALSE, label=lm_eqn(data))
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200") +
geom_smooth(method='lm', aes(x=y200, y=y300), se=FALSE)
model <- lm(y ~ x, data)
model <- lm(y300 ~ y200, data)
coef(m)[1]
coef(model)[1]
coef(model)[2]
eq <- substitute(italic(y) == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(unname(coef(model)[1]), digits = 2),
b = format(unname(coef(model)[2]), digits = 2),
r2 = format(summary(model)$r.squared, digits = 3)))
eq
as.character(as.expression(eq))
eq
eq <- substitute(y == a + b %.% italic(x)*","~~italic(r)^2~"="~r2,
list(a = format(unname(coef(model)[1]), digits = 2),
b = format(unname(coef(model)[2]), digits = 2),
r2 = format(summary(model)$r.squared, digits = 3)))
eq
eq <- substitute(y = a + b * x,
list(a = format(unname(coef(model)[1]), digits = 2),
b = format(unname(coef(model)[2]), digits = 2),
r2 = format(summary(model)$r.squared, digits = 3)))
eq <- substitute(y == a + b * x,
list(a = format(unname(coef(model)[1]), digits = 2),
b = format(unname(coef(model)[2]), digits = 2),
r2 = format(summary(model)$r.squared, digits = 3)))
eq
eq <- substitute("y ==" + a "+" b "* x",
list(a = format(unname(coef(model)[1]), digits = 2),
b = format(unname(coef(model)[2]), digits = 2),
r2 = format(summary(model)$r.squared, digits = 3)))
as.character(as.expression(eq))
as.expression(eq)
toString(eq)
eg
eq
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200") +
geom_smooth(method='lm', aes(x=y200, y=y300), se=FALSE label=eq)
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200") +
geom_smooth(method='lm', aes(x=y200, y=y300), se=FALSE, label=eq)
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200") +
geom_smooth(method='lm', aes(x=y200, y=y300), se=FALSE) +
geom_text(x = 25, y = 300, label = lm_eqn(df), parse = TRUE)
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200") +
geom_smooth(method='lm', aes(x=y200, y=y300), se=FALSE) +
geom_text(x = 25, y = 300, label = eq, parse = TRUE)
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200") +
geom_smooth(method='lm', aes(x=y200, y=y300), se=FALSE) +
geom_text(x = 25, y = 300, label = 'Hello', parse = TRUE)
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200") +
geom_smooth(method='lm', aes(x=y200, y=y300), se=FALSE) +
geom_text(x = 5, y = -5, label = 'Hello', parse = TRUE)
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200") +
geom_smooth(method='lm', aes(x=y200, y=y300), se=FALSE) +
geom_text(x = -5, y = 5, label = 'Hello', parse = TRUE)
eq <- 'R'+"3"
eq <- 'R'+'3'
eq <- paste('r', '3')
eq
eq <- paste('y=',coef(model)[1])
eq
eq <- paste('y=',unname(coef(model)[1],digits=2))
eq <- paste('y=',format(coef(model)[1], digits=2))
eq
eq <- paste('y=',format(coef(model)[1], digits=3))
eq
eq <- paste('y =',
format(coef(model)[1], digits=3),
'+',
format(coef(model)[2], digits=3),
'* x')
eq
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200") +
geom_smooth(method='lm', aes(x=y200, y=y300), se=FALSE) +
geom_text(x = -5, y = 5, label = eq, parse = TRUE)
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200") +
geom_smooth(method='lm', aes(x=y200, y=y300), se=FALSE) +
geom_text(x = -6, y = 5, label = eq, parse = TRUE)
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200") +
geom_smooth(method='lm', aes(x=y200, y=y300), se=FALSE) +
geom_text(x = -4, y = 5, label = eq, parse = TRUE)
eq
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200") +
geom_smooth(method='lm', aes(x=y200, y=y300), se=FALSE) +
geom_text(x = -4, y = 5, label = eq, parse = TRUE)
eq <- paste(italic('y ='),
format(coef(model)[1], digits=3),
'+',
format(coef(model)[2], digits=3),
'* x')
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200") +
geom_smooth(method='lm', aes(x=y200, y=y300), se=FALSE) +
geom_text(x = -4, y = 5, label = as.character(eq), parse = TRUE)
as.character(as.expression(eq))
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200") +
geom_smooth(method='lm', aes(x=y200, y=y300), se=FALSE) +
geom_text(x = -4, y = 5, label = as.character(as.expression(eq)), parse = TRUE)
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200") +
geom_smooth(method='lm', aes(x=y200, y=y300), se=FALSE) +
geom_text(x = -4, y = 5, label = as.character(as.expression(eq)), parse = TRUE)
eq <- paste('x =',
format(coef(model)[1], digits=3),
'+',
format(coef(model)[2], digits=3),
'* x')
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200") +
geom_smooth(method='lm', aes(x=y200, y=y300), se=FALSE) +
geom_text(x = -4, y = 5, label = as.character(as.expression(eq)), parse = TRUE)
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200") +
geom_smooth(method='lm', aes(x=y200, y=y300), se=FALSE) +
geom_text(x = -4, y = 5, label = eq, parse = TRUE)
model <- lm(y200 ~ y100, data)
# lm equation in string format
eq <- paste('x =',
format(coef(model)[1], digits=3),
'+',
format(coef(model)[2], digits=3),
'* x')
# plot
plots.base + geom_point(aes(x=y100, y=y200), color="blue", alpha=0.7, size=1) +
ggtitle("y200 vs y100") +
geom_smooth(method='lm', aes(x=y200, y=y100), se=FALSE) +
geom_text(x = -4, y = 5, label = eq, parse = TRUE)
plots.base + geom_point(aes(y=hour.model$residuals, x=partnum), color="blue", alpha=0.3, size=1) +
xlab("Part number") +
ylab("Hour-adjusted y300") +
ggtitle("Residuals of linear model of output y300 on hour\nover 5 days of observation") +
geom_hline(yintercept=-10, color="#747474", linetype="dashed") +
geom_hline(yintercept=10, color="#747474", linetype="dashed")
# plot
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200") +
geom_smooth(method='lm', aes(x=y200, y=y300), se=FALSE) +
geom_text(x = -4, y = 5, label = eq, parse = TRUE)
# STAT 435 Team 2
# Establishing the Baseline (W1) - Analysis code
library(ggplot2)
data <- read.table("Baseline.csv", sep="\t", header=TRUE)
data$day <- data$daycount
data$hour <- data$partnum %/% 60
data$shift.day <- data$shift + (data$daycount-1)*3
View(data)
head(data)
y300.mean <- mean(data$y300); y300.mean
y300.sd <- sd(data$y300); y300.sd
ci.halfwidth <- qnorm(0.975) * y300.sd / sqrt(length(data$y300))
y300.mean - ci.halfwidth; y300.mean + ci.halfwidth
y300.min <- min(data$y300); y300.min
y300.max <- max(data$y300); y300.max
num.outof.spec <- sum((data$y300 > 10) | (data$y300 < -10)); num.outof.spec
num.outof.spec/ length(data$y300)
# Histogram showing distribution of the data
ggplot(data=data, mapping=aes(x=y300)) +
geom_histogram(color="#CCCCCC", fill="#686868") +
geom_vline(xintercept=-10, color="#747474", linetype="dashed") +
geom_vline(xintercept=10, color="#747474", linetype="dashed") +
theme(plot.title=element_text(hjust=0.5, face="bold"),
axis.title=element_text(size=12)) +
ggtitle("Distribution of observed values\nwith target specification limits") +
xlab("Observed y300") +
ylab("Frequency")
# A base theme so all plots look consistent
plots.base <- ggplot(data=data) +
theme(plot.title=element_text(hjust=0.5, face="bold"),
axis.title=element_text(size=12)) +
geom_hline(yintercept=y300.min, color="#747474") +
geom_hline(yintercept=y300.max, color="#747474")
# Prep for the multivari plot
hours.df <- data.frame(hour=unique(data$hour))
hours.df$y300.avg <- sapply(hours.df$hour,
function(x){
return(mean(subset(data, hour==x)$y300))
})
# Multivari plot by hour
plots.base + geom_point(aes(y=y300, x=partnum), color="blue", alpha=0.3, size=1, show.legend=TRUE) +
geom_line(data=hours.df,
mapping=aes(y=y300.avg, x=as.integer(hour)*60),
colour="#EE4422", size=1, alpha=0.7, show.legend=FALSE) +
geom_point(data=hours.df,
mapping=aes(y=y300.avg, x=as.integer(hour)*60),
colour="red", size=2, alpha=0.7, show.legend=TRUE) +
xlab("Part number") +
ggtitle("Time series of output variable y300\nover 5 days of observation") +
geom_hline(yintercept=-10, color="#747474", linetype="dashed") +
geom_hline(yintercept=10, color="#747474", linetype="dashed")
# Boxplot by day
plots.base + geom_boxplot(aes(y=y300, x=as.factor(day))) +
xlab("Day") + ylab("y300") +
ggtitle("Distribution of output variable y300 by day")
# Boxplot by shift
plots.base + geom_boxplot(aes(y=y300, x=as.factor(shift))) +
xlab("Shift") + ylab("y300") +
ggtitle("Distribution of output variable y300 by shift")
# Boxplot by hour
plots.base + geom_boxplot(aes(y=y300, x=as.factor(hour))) +
xlab("Hour") + ylab("y300") +
ggtitle("Distribution of output variable y300 by hour")
# Boxplot by shift by day
plots.base + geom_boxplot(aes(y=y300, x=as.factor(shift.day))) +
xlab("Shift") + ylab("y300") +
ggtitle("Distribution of output variable y300 by shift (by day)")
# There was a lot of hourly variability from the multivari chart.
# We can check this with a linear model.
# We get an R-squared of 65%: 2/3 of variability can be explained by hour-to-hour
# (or on the scale of 4 hours) variation
hour.model <- lm(y300 ~ as.factor(hour), data)
summary(hour.model)
1 - summary(hour.model)$r.squared
plots.base + geom_point(aes(y=hour.model$residuals, x=partnum), color="blue", alpha=0.3, size=1) +
xlab("Part number") +
ylab("Hour-adjusted y300") +
ggtitle("Residuals of linear model of output y300 on hour\nover 5 days of observation") +
geom_hline(yintercept=-10, color="#747474", linetype="dashed") +
geom_hline(yintercept=10, color="#747474", linetype="dashed")
shift.model <- lm(y300 ~ as.factor(shift), data)
summary(shift.model)
day.model <- lm(y300 ~ as.factor(day), data)
summary(day.model)
shift.day.model <- lm(y300 ~ as.factor(shift.day), data)
summary(shift.day.model)
data$shift.day
summary(shift.day.model)$r.squared - summary(day.model)$r.squared
summary(hour.model)$r.squared - summary(shift.day.model)$r.squared
# Multivari plot by hour
plots.base + geom_point(aes(y=y300, x=partnum), color="blue", alpha=0.3, size=1, show.legend=TRUE) +
geom_line(data=hours.df,
mapping=aes(y=y300.avg, x=as.integer(hour)*60),
colour="#EE4422", size=1, alpha=0.7, show.legend=FALSE) +
geom_point(data=hours.df,
mapping=aes(y=y300.avg, x=as.integer(hour)*60),
colour="red", size=2, alpha=0.7, show.legend=TRUE) +
xlab("Part number") +
ggtitle("Time series of output variable y300\nover 5 days of observation") +
geom_hline(yintercept=-10, color="#747474", linetype="dashed") +
geom_hline(yintercept=10, color="#747474", linetype="dashed")
data <- read.delim("~/Documents/GitHub/STAT-435/Baseline/Baseline.csv")
View(data)
# lm model for y300 vs y200
model <- lm(y300 ~ y200, data)
# lm equation in string format
eq <- paste('x =',
format(coef(model)[1], digits=3),
'+',
format(coef(model)[2], digits=3),
'* x')
# plot
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200") +
geom_smooth(method='lm', aes(x=y200, y=y300), se=FALSE) +
geom_text(x = -4, y = 5, label = eq, parse = TRUE)
data <- read.delim("~/Documents/GitHub/STAT-435/Baseline/Baseline.csv")
View(data)
data$shift.day <- data$shift + (data$daycount-1)*3
View(data)
plots.base <- ggplot(data=data) +
theme(plot.title=element_text(hjust=0.5, face="bold"),
axis.title=element_text(size=12))
# lm model for y300 vs y200
model <- lm(y300 ~ y200, data)
# lm equation in string format
eq <- paste('x =',
format(coef(model)[1], digits=3),
'+',
format(coef(model)[2], digits=3),
'* x')
# plot
plots.base + geom_point(aes(x=y200, y=y300), color="blue", alpha=0.7, size=1) +
ggtitle("y300 vs y200") +
geom_smooth(method='lm', aes(x=y200, y=y300), se=FALSE) +
geom_text(x = -4, y = 5, label = eq, parse = TRUE)
data <- read.delim("~/Documents/GitHub/STAT-435/search_for_dominant_cause/elimination.csv")
View(data)
plots.base <- ggplot(data=data) +
theme(plot.title=element_text(hjust=0.5, face="bold"),
axis.title=element_text(size=12))
data <- read.delim("Baseline.csv")
data$shift.day <- data$shift + (data$daycount-1)*3
model <- lm(y300 ~ as.factor(shift.day) + as.factor(daycount) + as.factor(shift), data)
summary(aov(model))
# read data
data <- read.delim("elimination.csv")
# read data
data <- read.delim("elimination.csv")
# read data
data <- read.delim("elimination.csv")
# read data
data <- read.delim("elimination.csv")
# read data
data <- read.delim(file="elimination.csv")
# read data
data <- read.csv(file="elimination.csv")
# read data
data <- read.csv(file="elimination.csv")
